# Pulled from DigitalOcean tutorial here: https://www.digitalocean.com/community/tutorials/how-to-use-ansible-to-install-and-set-up-docker-on-ubuntu-18-04
---

# Populate host groups with:
# - Manager nodes that are already / are not yet running docker swarm
# - Worker nodes that are already / are not yet running docker swarm
- hosts: all
  become: true
  environment:
    http_proxy: 'http://wwwproxy.unimelb.edu.au:8000'
    https_proxy: 'http://wwwproxy.unimelb.edu.au:8000'
  roles:
    - common
    - swarm-manager

- hosts: swarm_manager_bootstrap[0]
  become: true
  tasks:
    - name: initialize swarm cluster
      shell: >
        docker swarm init
        --advertise-addr={{ swarm_iface | default('eth0') }}:2377
      when: "'swarm_manager_up' not in groups"
      register: bootstrap_first_node

    - name: add initialized host to swarm_manager_up group
      add_host:
        hostname: "{{ play_hosts[0] }}"
        groups: swarm_manager_up
      when: bootstrap_first_node is changed

- hosts: swarm_manager_up[0]
  become: true
  vars:
    iface: "{{ swarm_iface | default('eth0') }}"
  tasks:
    - name: retrieve swarm manager token
      shell: docker swarm join-token -q manager
      register: swarm_manager_token

    - name: retrieve swarm worker token
      shell: docker swarm join-token -q worker
      register: swarm_worker_token

    - name: populate list of manager ips
      add_host:
        hostname: "{{ hostvars[item]['ansible_' + iface]['ipv4']['address'] }}"
        groups: swarm_manager_ips
      with_items: "{{ play_hosts }}"

- hosts: swarm_manager_bootstrap:!swarm_manager_up
  become: true
  vars:
    token: "{{ hostvars[groups['swarm_manager_up'][0]]['swarm_manager_token']['stdout'] }}"
  tasks:
    - name: join manager nodes to cluster
      shell: >
        docker swarm join
        --advertise-addr={{ swarm_iface | default('eth0') }}:2377
        --token={{ token }}
        {{ groups['swarm_manager_ips'][0] }}:2377

- hosts: swarm_worker_bootstrap
  become: true
  vars:
    token: "{{ hostvars[groups['swarm_manager_up'][0]]['swarm_worker_token']['stdout'] }}"
  tasks:
    - name: join worker nodes to cluster
      shell: >
        docker swarm join
        --advertise-addr={{ swarm_iface | default('eth0') }}:2377
        --token={{ token }}
        {{ groups['swarm_manager_ips'][0] }}:2377
